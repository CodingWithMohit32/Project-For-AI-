import React, { useState } from "react";
import { Card, CardContent, Button } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import axios from "axios";

const subjects = [
  "Math",
  "Science",
  "History",
  "English",
  "Random Fun Facts",
];

export default function FunnyTutorAI() {
  const [selectedSubject, setSelectedSubject] = useState("Math");
  const [response, setResponse] = useState("");
  const [userInput, setUserInput] = useState("");
  const [loading, setLoading] = useState(false);

  const handleAskAI = async () => {
    if (!userInput.trim()) {
      setResponse("Please type a question first!");
      return;
    }

    setLoading(true);
    setResponse("");

    try {
      const result = await axios.post("https://api.openai.com/v1/chat/completions", {
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: `You are a funny and friendly tutor. When answering questions about ${selectedSubject}, include humor to make it engaging.`,
          },
          {
            role: "user",
            content: userInput,
          },
        ],
        max_tokens: 150,
        temperature: 0.7,
      }, {
        headers: {
          "Authorization": `Bearer YOUR_OPENAI_API_KEY`,
          "Content-Type": "application/json",
        },
      });

      const aiResponse = result.data.choices[0].message.content;
      setResponse(aiResponse);
    } catch (error) {
      console.error("Error fetching AI response:", error);
      setResponse("Oops! Something went wrong. Please try again later.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center p-4 space-y-6">
      <h1 className="text-2xl font-bold">Funny AI Tutor ðŸ¤“ðŸ˜‚</h1>
      <Card className="w-full max-w-lg p-4">
        <CardContent>
          <div className="space-y-4">
            <label className="block font-semibold">Choose a Subject:</label>
            <select
              value={selectedSubject}
              onChange={(e) => setSelectedSubject(e.target.value)}
              className="w-full p-2 border rounded"
            >
              {subjects.map((subject) => (
                <option key={subject} value={subject}>
                  {subject}
                </option>
              ))}
            </select>

            <label className="block font-semibold">Ask Your Question:</label>
            <Input
              value={userInput}
              onChange={(e) => setUserInput(e.target.value)}
              placeholder="Type your question here..."
              className="w-full"
            />

            <Button onClick={handleAskAI} className="w-full mt-4" disabled={loading}>
              {loading ? "Thinking..." : "Ask AI"}
            </Button>

            {response && (
              <div className="mt-4 p-4 bg-gray-100 rounded">
                <p className="font-semibold">AI's Response:</p>
                <p>{response}</p>
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
